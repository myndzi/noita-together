// @generated by protoc-gen-es v1.4.0 with parameter "target=ts"
// @generated from file nt-web-app/recorder/fixtures/protohax.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message as Message$1, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from enum Enum
 */
export enum Enum {
  /**
   * @generated from enum value: ENUM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENUM_ONE = 1;
   */
  ONE = 1,

  /**
   * @generated from enum value: ENUM_TWO = 2;
   */
  TWO = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(Enum)
proto3.util.setEnumType(Enum, "Enum", [
  { no: 0, name: "ENUM_UNSPECIFIED" },
  { no: 1, name: "ENUM_ONE" },
  { no: 2, name: "ENUM_TWO" },
]);

/**
 * @generated from message Message
 */
export class Message extends Message$1<Message> {
  /**
   * low (single-byte tag)
   *
   * @generated from field: Message l_message = 1;
   */
  lMessage?: Message;

  /**
   * singular
   *
   * @generated from field: int32 single_int32 = 11;
   */
  singleInt32 = 0;

  /**
   * @generated from field: int64 single_int64 = 12;
   */
  singleInt64 = protoInt64.zero;

  /**
   * @generated from field: uint32 single_uint32 = 13;
   */
  singleUint32 = 0;

  /**
   * @generated from field: uint64 single_uint64 = 14;
   */
  singleUint64 = protoInt64.zero;

  /**
   * @generated from field: sint32 single_sint32 = 15;
   */
  singleSint32 = 0;

  /**
   * @generated from field: sint64 single_sint64 = 16;
   */
  singleSint64 = protoInt64.zero;

  /**
   * @generated from field: bool single_bool = 17;
   */
  singleBool = false;

  /**
   * @generated from field: Enum single_enum = 18;
   */
  singleEnum = Enum.UNSPECIFIED;

  /**
   * @generated from field: fixed64 single_fixed64 = 19;
   */
  singleFixed64 = protoInt64.zero;

  /**
   * @generated from field: sfixed64 single_sfixed64 = 20;
   */
  singleSfixed64 = protoInt64.zero;

  /**
   * @generated from field: double single_double = 21;
   */
  singleDouble = 0;

  /**
   * @generated from field: string single_string = 22;
   */
  singleString = "";

  /**
   * @generated from field: bytes single_bytes = 23;
   */
  singleBytes = new Uint8Array(0);

  /**
   * @generated from field: fixed32 single_fixed32 = 24;
   */
  singleFixed32 = 0;

  /**
   * @generated from field: sfixed32 single_sfixed32 = 25;
   */
  singleSfixed32 = 0;

  /**
   * @generated from field: float single_float = 26;
   */
  singleFloat = 0;

  /**
   * @generated from field: Message single_message = 27;
   */
  singleMessage?: Message;

  /**
   * repeated 
   *
   * @generated from field: repeated int32 repeated_int32 = 111;
   */
  repeatedInt32: number[] = [];

  /**
   * @generated from field: repeated string repeated_string = 122;
   */
  repeatedString: string[] = [];

  /**
   * @generated from field: repeated bytes repeated_bytes = 123;
   */
  repeatedBytes: Uint8Array[] = [];

  /**
   * @generated from field: repeated Message repeated_message = 127;
   */
  repeatedMessage: Message[] = [];

  /**
   * unpacked repeated
   *
   * @generated from field: repeated int32 unpacked_int32 = 211 [packed = false];
   */
  unpackedInt32: number[] = [];

  constructor(data?: PartialMessage<Message>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Message";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "l_message", kind: "message", T: Message },
    { no: 11, name: "single_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "single_int64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "single_uint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "single_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "single_sint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */ },
    { no: 16, name: "single_sint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */ },
    { no: 17, name: "single_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "single_enum", kind: "enum", T: proto3.getEnumType(Enum) },
    { no: 19, name: "single_fixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */ },
    { no: 20, name: "single_sfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */ },
    { no: 21, name: "single_double", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 22, name: "single_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "single_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 24, name: "single_fixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */ },
    { no: 25, name: "single_sfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */ },
    { no: 26, name: "single_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 27, name: "single_message", kind: "message", T: Message },
    { no: 111, name: "repeated_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 122, name: "repeated_string", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 123, name: "repeated_bytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 127, name: "repeated_message", kind: "message", T: Message, repeated: true },
    { no: 211, name: "unpacked_int32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true, packed: false },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Message {
    return new Message().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Message {
    return new Message().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Message {
    return new Message().fromJsonString(jsonString, options);
  }

  static equals(a: Message | PlainMessage<Message> | undefined, b: Message | PlainMessage<Message> | undefined): boolean {
    return proto3.util.equals(Message, a, b);
  }
}

